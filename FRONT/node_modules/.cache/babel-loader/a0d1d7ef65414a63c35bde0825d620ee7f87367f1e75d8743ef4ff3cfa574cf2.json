{"ast":null,"code":"const validation = (userData, errors, setErrors) => {\n  //username\n  if (!userData.username) setErrors({\n    ...errors,\n    username: \"Por favor completa este campo\"\n  });else if (userData.username.lenght > 35) setErrors({\n    ...errors,\n    username: \"Maximo 35 caracteres\"\n  });else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.username)) {\n    setErrors({\n      ...errors,\n      username: \"Email invalido\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      username: \"\"\n    });\n  }\n\n  //password\n  if (userData.password.lenght < 6 || userData.password.lenght > 10) {\n    setErrors({\n      ...errors,\n      password: \"Longitud de password invalida, requiere 6 a 10 caracteres\"\n    });\n  } else if (!/\\d/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"La password debe contener, al menos, un número\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      password: \"\"\n    });\n  }\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","setErrors","username","lenght","test","password"],"sources":["C:/Users/elgra/Desktop/HENRY/Proyecto Integrador/rick_and_morty/FRONT/src/components/Forms/validation.js"],"sourcesContent":["const validation = (userData, errors, setErrors) => {\r\n//username\r\nif(!userData.username)\r\nsetErrors({ ...errors, username: \"Por favor completa este campo\" });\r\nelse if(userData.username.lenght > 35)\r\nsetErrors({ ...errors, username: \"Maximo 35 caracteres\" });\r\nelse if (\r\n    !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(userData.username)\r\n    ) {\r\n    setErrors({ ...errors, username: \"Email invalido\" });\r\n} else {\r\n    setErrors({ ...errors, username: \"\" });\r\n}\r\n\r\n//password\r\nif (userData.password.lenght < 6 || userData.password.lenght > 10){\r\n    setErrors({ ...errors, password: \"Longitud de password invalida, requiere 6 a 10 caracteres\"})\r\n} else if(!/\\d/.test(userData.password)) {\r\n    setErrors({ ...errors, password: \"La password debe contener, al menos, un número\"})\r\n} else {\r\n    setErrors({ ...errors, password: \"\"})\r\n}\r\n\r\n\r\n};\r\n\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EACpD;EACA,IAAG,CAACF,QAAQ,CAACG,QAAQ,EACrBD,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,QAAQ,EAAE;EAAgC,CAAC,CAAC,CAAC,KAC/D,IAAGH,QAAQ,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAE,EACrCF,SAAS,CAAC;IAAE,GAAGD,MAAM;IAAEE,QAAQ,EAAE;EAAuB,CAAC,CAAC,CAAC,KACtD,IACD,CAAC,+CAA+C,CAACE,IAAI,CAACL,QAAQ,CAACG,QAAQ,CAAC,EACtE;IACFD,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,QAAQ,EAAE;IAAiB,CAAC,CAAC;EACxD,CAAC,MAAM;IACHD,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEE,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC1C;;EAEA;EACA,IAAIH,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAIJ,QAAQ,CAACM,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAC;IAC9DF,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAA2D,CAAC,CAAC;EAClG,CAAC,MAAM,IAAG,CAAC,IAAI,CAACD,IAAI,CAACL,QAAQ,CAACM,QAAQ,CAAC,EAAE;IACrCJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAgD,CAAC,CAAC;EACvF,CAAC,MAAM;IACHJ,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEK,QAAQ,EAAE;IAAE,CAAC,CAAC;EACzC;AAGA,CAAC;AAED,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}