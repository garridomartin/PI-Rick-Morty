{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elgra\\\\Desktop\\\\HENRY\\\\Proyecto Integrador\\\\rick_and_morty\\\\FRONT\\\\src\\\\components\\\\Cards\\\\Cards.jsx\";\nimport Card from \"../Card/Card\";\nimport { CardContainer } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cards(_ref) {\n  let {\n    characters,\n    onClose\n  } = _ref;\n  //originalmente, reciba props, y definia characters = props\n  //const onClose = () => window.alert(\"Emulamos que cierre la card\");\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    children: characters.map(_ref2 => {\n      let {\n        id,\n        name,\n        species,\n        gender,\n        image\n      } = _ref2;\n      //donde se enumera el objeto, puede ir characters...\n\n      return (\n        /*#__PURE__*/\n        //... llamar characters.name. Cuando mapeo, siempre agregar key\n        _jsxDEV(Card, {\n          id: id,\n          image: image,\n          name: name,\n          species: species,\n          gender: gender,\n          onClose: onClose\n        }, id /*esto se pone para que se ordene react. identifica cada carta con key */, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this) //si cierro con </Card>, no se por que no lo toma\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","CardContainer","jsxDEV","_jsxDEV","Cards","_ref","characters","onClose","children","map","_ref2","id","name","species","gender","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elgra/Desktop/HENRY/Proyecto Integrador/rick_and_morty/FRONT/src/components/Cards/Cards.jsx"],"sourcesContent":["import Card from \"../Card/Card\";\r\nimport { CardContainer } from \"./styledComponents\";\r\n\r\nexport default function Cards({characters, onClose}) {//originalmente, reciba props, y definia characters = props\r\n  //const onClose = () => window.alert(\"Emulamos que cierre la card\");\r\n  return (\r\n    <CardContainer>\r\n      {characters.map(({id, name, species, gender, image}) => {//donde se enumera el objeto, puede ir characters...\r\n       \r\n       return (//... llamar characters.name. Cuando mapeo, siempre agregar key\r\n          <Card\r\n            key = {id/*esto se pone para que se ordene react. identifica cada carta con key */}\r\n            id = {id}\r\n            image = {image}\r\n            name = {name}\r\n            species = {species}\r\n            gender = {gender}\r\n            onClose = {onClose}\r\n          />//si cierro con </Card>, no se por que no lo toma\r\n        );\r\n      })}\r\n    </CardContainer>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAwB;EAAA,IAAvB;IAACC,UAAU;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAAG;EACpD;EACA,oBACEF,OAAA,CAACF,aAAa;IAAAO,QAAA,EACXF,UAAU,CAACG,GAAG,CAACC,KAAA,IAAwC;MAAA,IAAvC;QAACC,EAAE;QAAEC,IAAI;QAAEC,OAAO;QAAEC,MAAM;QAAEC;MAAK,CAAC,GAAAL,KAAA;MAAM;;MAExD;QAAA;QAAQ;QACLP,OAAA,CAACH,IAAI;UAEHW,EAAE,EAAIA,EAAG;UACTI,KAAK,EAAIA,KAAM;UACfH,IAAI,EAAIA,IAAK;UACbC,OAAO,EAAIA,OAAQ;UACnBC,MAAM,EAAIA,MAAO;UACjBP,OAAO,EAAIA;QAAQ,GANZI,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAOT;MAAA;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACY;AAEpB;AAACC,EAAA,GApBuBhB,KAAK;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}